
@page
@using Test1.Pages.User
@model Create
@{
    ViewData["Title"] = "Streamed Single File Upload with AJAX (Physical)";
    Layout = "_Layout";
}


<h1>Stream a file with AJAX to physical storage with a controller endpoint</h1>

<p>The following form's <code>action</code> points to a controller endpoint that only receives the file and saves it to disk. If additional form data is added to the form, the additional data is ignored by the controller action.</p>

<form id="uploadForm" action="UploadPhysical" method="post"
      enctype="multipart/form-data" onsubmit="AJAXSubmit(this);return false;">
    <div class="form-group">
                <label for="txtName">Name</label>
                <input type="text" class="form-control" id="txtName" name="Name">
            </div>
            <div class="form-group">
                <label for="txtAge">Age</label>
                <input type="text" class="form-control" id="txtAge" name="Age">
            </div>
    <dl>
        <dt>
            <label for="file">File</label>
        </dt>
        <dd>
            <input id="file" type="file" name="file"/>
        </dd>
    </dl>

    <input class="btn" type="submit" value="Upload"/>

    <div style="margin-top:15px">
        <output form="uploadForm" name="result"></output>
    </div>
</form>

@section Scripts {
    <script>
    "use strict";
    async function AJAXSubmit (oFormElement) {
      const formData = new FormData(oFormElement);
      try {
        const response = await fetch(oFormElement.action, {
          method: 'POST',
          headers: {
            'RequestVerificationToken': getCookie('RequestVerificationToken')
          },
          body: formData
        });
        oFormElement.elements.namedItem("result").value = 
          'Result: ' + response.status + ' ' + response.statusText+ ' .Website is about to return to Main Page';
        if(response.status==200) {
            console.log("sadasd");
                     let tID = setTimeout(function () {
                         window.location.href = "/";
                         window.clearTimeout(tID);		// clear time out.
                     }, 3000);
           
            }
      } catch (error) {
        console.error('Error:', error);
      }
    }
    function getCookie(name) {
      var value = "; " + document.cookie;
      var parts = value.split("; " + name + "=");
      if (parts.length == 2) return parts.pop().split(";").shift();
    }
  </script>
}