@using CloudinaryDotNet
@using Test1.Extention.Enum
@inject Cloudinary cloudinary
@model Test1.ViewModel.UserVM
@{
    ViewData["Title"] = "PhotoAlbum - Direct Upload page";
}

<!-- A form for direct uploading using a jQuery plug-in.
The BuildUploadForm method generates the required HTML and JavaScript to
allow uploading directly from the browser to your Cloudinary account -->
<div class="form-horizontal">
    <form asp-controller="User" asp-action="AddOrUpdate" onsubmit="return jQueryAjaxPostUser(this)" autocomplete="off">
        <hr/>
        <div class="form-group">
            @Html.HiddenFor(model => model.Id)
            @*<input type="hidden" value="@Model.Id" name="Id"/>*@
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gmail, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gmail, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Gmail, "", new {@class = "tet-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>
        
        
        <input type="hidden" asp-for="@Model.ImageUrl" id="image_url"/>
        <div id="direct_upload">
            <div>
                @Html.AntiForgeryToken()

                @if ((DirectUploadType) ViewData["Type"] != DirectUploadType.Signed)
                {
                    @Html.Raw(cloudinary.Api.BuildUploadForm("test-field", "auto", new SortedDictionary<string, object> {{"tags", "direct_upload"}}, new Dictionary<string, string> {{"multiple", "true"}}))
                }
                else
                {
                    @Html.Raw(cloudinary.Api.BuildUnsignedUploadForm("test-field", (string) ViewData["Preset"], "auto", new SortedDictionary<string, object> {{"tags", "indirect"}}, new Dictionary<string, string> {{"multiple", "true"}}))
                }
            </div>

            <!-- status box -->
            <div class="status">
                <h2>Status</h2>
                <span class="status_value">Idle</span>
            </div>

            <div class="uploaded_info_holder">
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary"/>
            </div>
        </div>

    </form>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <form>
                <button asp-controller="Home" asp-action="Index" formmethod="get" class="btn btn-primary">Cancel</button>
            </form>
        </div>
    </div>
</div>


@section Scripts{
    @Html.Raw(cloudinary.GetCloudinaryJsConfig(true, @"/js/Cloudinary"))
    <script src="@Url.Content("~/js/Cloudinary/uploadCloudinary.js")"></script>
    <script src="@Url.Content("~/js/user.js")"></script>
}