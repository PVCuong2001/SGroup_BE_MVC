
    @using Test1.ViewModel    
    @model Test1.ViewModel.CustomerVM  
  
    <div class="col-md-12">    
        <h2>Employee Detail</h2>    
    </div>    
        <form asp-controller="Customer" asp-action="Create" method="post">
    <!-- Input and Submit elements -->

        <div class="form-horizontal">    
                
        <hr />    
        <div class="form-group">    
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })    
                <div class="col-md-10">
                    <input class="form-control" asp-for="@Model.Name"/>
                    <span class = "text-danger" asp-validation-for="@Model.Name"/>
                </div>    
            </div>    
        
            <div class="form-group">    
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })    
                <div class="col-md-10">
                    <input class="form-control" asp-for="@Model.Address"/>
                    <span class = "text-danger" asp-validation-for="@Model.Address"/>
                    </div>    
            </div>    
        
            <div class="form-group">    
                @Html.LabelFor(model => model.DTB, htmlAttributes: new { @class = "control-label col-md-2" })    
                <div class="col-md-10">
                    <input class="form-control" asp-for="@Model.DTB"/>
                    <span class = "text-danger" asp-validation-for="@Model.DTB"/>
                    </div>    
            </div>    
            
            <div class="form-group">    
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })    
                <div class="col-md-10">    
                    <select asp-for="Gender"
                            class="form-control"
                            asp-items="Html.GetEnumSelectList<CustomerVM.GenderEnum>()">
                         <option>Select type ...</option>
                    </select>
                    <span class = "text-danger" asp-validation-for="@Model.Gender"/>
                </div>    
            </div>    
        
            <div class="form-group">    
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })    
                <div class="col-md-10">    
                        <input class="form-control" asp-for="@Model.ImageUrl"/>
                        <span class = "text-danger" asp-validation-for="@Model.ImageUrl"/>
                </div>    
            </div>    
        
          
        
            <div class="form-group">    
                <div class="col-md-offset-2 col-md-10">    
                    <input type="submit" value="Add" class="btn btn-primary" />    
                </div>    
            </div>    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                  
                               <button asp-route="SearchForm" formmethod="get" class="btn btn-primary">Cancel</button>
                </div>
             </div>    
        </div>
</form>
     
            
    @* @section Scripts {    
        @Scripts.Render("~/bundles/jqueryval")    
    }  *@
